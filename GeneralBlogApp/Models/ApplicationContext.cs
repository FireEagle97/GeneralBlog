// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace GeneralBlogApp.Models;

public partial class ApplicationContext : DbContext
{
    public ApplicationContext(DbContextOptions<ApplicationContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Article> Articles { get; set; }

    public virtual DbSet<Block> Blocks { get; set; }

    public virtual DbSet<Category> Categories { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Article>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Article");

            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.MainImageAltTag).HasMaxLength(100);
            entity.Property(e => e.MainImageFileName).HasMaxLength(100);
            entity.Property(e => e.MainImageUploadDate).HasColumnType("datetime");
            entity.Property(e => e.MainImageUrl).HasMaxLength(200);
            entity.Property(e => e.MetaDescription).HasMaxLength(250);
            entity.Property(e => e.MetaKeywords).HasMaxLength(150);
            entity.Property(e => e.MetaTitle).HasMaxLength(50);
            entity.Property(e => e.Slug).HasMaxLength(150);
            entity.Property(e => e.Summary).HasMaxLength(250);
            entity.Property(e => e.Title)
                .IsRequired()
                .HasMaxLength(150)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Block>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Block");

            entity.Property(e => e.BlockOrder).HasDefaultValueSql("((1))");
            entity.Property(e => e.CreatedAt).HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.ImageAltTag).HasMaxLength(50);
            entity.Property(e => e.ImageFileName).HasMaxLength(50);
            entity.Property(e => e.ImageUploadedBy)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.ImageUploadedDate).HasColumnType("datetime");
            entity.Property(e => e.ImageUrl).HasMaxLength(150);
            entity.Property(e => e.VideoLink).HasMaxLength(150);
        });

        modelBuilder.Entity<Category>(entity =>
        {
            entity.ToTable("Category");

            entity.Property(e => e.LangId).HasDefaultValueSql("((1))");
            entity.Property(e => e.MetaDescription).HasMaxLength(250);
            entity.Property(e => e.MetaKeywords).HasMaxLength(50);
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}